# Generated from jsbach.g4 by ANTLR 4.10.1
from antlr4 import *
from io import StringIO
import sys
if sys.version_info[1] > 5:
    from typing import TextIO
else:
    from typing.io import TextIO


def serializedATN():
    return [
        4,0,24,147,6,-1,2,0,7,0,2,1,7,1,2,2,7,2,2,3,7,3,2,4,7,4,2,5,7,5,
        2,6,7,6,2,7,7,7,2,8,7,8,2,9,7,9,2,10,7,10,2,11,7,11,2,12,7,12,2,
        13,7,13,2,14,7,14,2,15,7,15,2,16,7,16,2,17,7,17,2,18,7,18,2,19,7,
        19,2,20,7,20,2,21,7,21,2,22,7,22,2,23,7,23,1,0,1,0,1,0,1,1,1,1,1,
        1,1,2,1,2,1,2,1,3,1,3,1,3,1,3,1,4,1,4,1,4,1,4,1,5,1,5,1,5,1,5,1,
        6,1,6,1,6,1,7,1,7,1,7,1,7,1,7,1,8,1,8,1,8,1,8,1,8,1,8,1,9,1,9,1,
        10,1,10,1,11,1,11,4,11,91,8,11,11,11,12,11,92,1,11,1,11,1,12,3,12,
        98,8,12,1,13,1,13,5,13,102,8,13,10,13,12,13,105,9,13,1,14,1,14,5,
        14,109,8,14,10,14,12,14,112,9,14,1,15,1,15,1,15,1,16,4,16,118,8,
        16,11,16,12,16,119,1,17,1,17,1,18,1,18,1,19,1,19,1,20,1,20,1,21,
        1,21,1,22,1,22,1,22,1,22,1,22,1,22,1,22,3,22,139,8,22,1,23,4,23,
        142,8,23,11,23,12,23,143,1,23,1,23,0,0,24,1,1,3,2,5,3,7,4,9,5,11,
        6,13,7,15,8,17,9,19,10,21,11,23,12,25,13,27,14,29,15,31,16,33,17,
        35,18,37,19,39,20,41,21,43,22,45,23,47,24,1,0,9,3,0,10,10,13,13,
        32,32,1,1,10,10,1,0,97,122,3,0,48,57,65,90,97,122,1,0,65,90,1,0,
        65,67,1,0,48,56,1,0,48,57,3,0,9,10,13,13,32,32,154,0,1,1,0,0,0,0,
        3,1,0,0,0,0,5,1,0,0,0,0,7,1,0,0,0,0,9,1,0,0,0,0,11,1,0,0,0,0,13,
        1,0,0,0,0,15,1,0,0,0,0,17,1,0,0,0,0,19,1,0,0,0,0,21,1,0,0,0,0,23,
        1,0,0,0,0,25,1,0,0,0,0,27,1,0,0,0,0,29,1,0,0,0,0,31,1,0,0,0,0,33,
        1,0,0,0,0,35,1,0,0,0,0,37,1,0,0,0,0,39,1,0,0,0,0,41,1,0,0,0,0,43,
        1,0,0,0,0,45,1,0,0,0,0,47,1,0,0,0,1,49,1,0,0,0,3,52,1,0,0,0,5,55,
        1,0,0,0,7,58,1,0,0,0,9,62,1,0,0,0,11,66,1,0,0,0,13,70,1,0,0,0,15,
        73,1,0,0,0,17,78,1,0,0,0,19,84,1,0,0,0,21,86,1,0,0,0,23,88,1,0,0,
        0,25,97,1,0,0,0,27,99,1,0,0,0,29,106,1,0,0,0,31,113,1,0,0,0,33,117,
        1,0,0,0,35,121,1,0,0,0,37,123,1,0,0,0,39,125,1,0,0,0,41,127,1,0,
        0,0,43,129,1,0,0,0,45,138,1,0,0,0,47,141,1,0,0,0,49,50,5,124,0,0,
        50,51,5,58,0,0,51,2,1,0,0,0,52,53,5,58,0,0,53,54,5,124,0,0,54,4,
        1,0,0,0,55,56,5,60,0,0,56,57,5,45,0,0,57,6,1,0,0,0,58,59,5,60,0,
        0,59,60,5,33,0,0,60,61,5,62,0,0,61,8,1,0,0,0,62,63,5,60,0,0,63,64,
        5,63,0,0,64,65,5,62,0,0,65,10,1,0,0,0,66,67,5,60,0,0,67,68,5,58,
        0,0,68,69,5,62,0,0,69,12,1,0,0,0,70,71,5,105,0,0,71,72,5,102,0,0,
        72,14,1,0,0,0,73,74,5,101,0,0,74,75,5,108,0,0,75,76,5,115,0,0,76,
        77,5,101,0,0,77,16,1,0,0,0,78,79,5,119,0,0,79,80,5,104,0,0,80,81,
        5,105,0,0,81,82,5,108,0,0,82,83,5,101,0,0,83,18,1,0,0,0,84,85,5,
        40,0,0,85,20,1,0,0,0,86,87,5,41,0,0,87,22,1,0,0,0,88,90,5,34,0,0,
        89,91,8,0,0,0,90,89,1,0,0,0,91,92,1,0,0,0,92,90,1,0,0,0,92,93,1,
        0,0,0,93,94,1,0,0,0,94,95,5,34,0,0,95,24,1,0,0,0,96,98,7,1,0,0,97,
        96,1,0,0,0,98,26,1,0,0,0,99,103,7,2,0,0,100,102,7,3,0,0,101,100,
        1,0,0,0,102,105,1,0,0,0,103,101,1,0,0,0,103,104,1,0,0,0,104,28,1,
        0,0,0,105,103,1,0,0,0,106,110,7,4,0,0,107,109,7,3,0,0,108,107,1,
        0,0,0,109,112,1,0,0,0,110,108,1,0,0,0,110,111,1,0,0,0,111,30,1,0,
        0,0,112,110,1,0,0,0,113,114,7,5,0,0,114,115,7,6,0,0,115,32,1,0,0,
        0,116,118,7,7,0,0,117,116,1,0,0,0,118,119,1,0,0,0,119,117,1,0,0,
        0,119,120,1,0,0,0,120,34,1,0,0,0,121,122,5,43,0,0,122,36,1,0,0,0,
        123,124,5,42,0,0,124,38,1,0,0,0,125,126,5,47,0,0,126,40,1,0,0,0,
        127,128,5,45,0,0,128,42,1,0,0,0,129,130,5,37,0,0,130,44,1,0,0,0,
        131,139,2,60,62,0,132,133,5,47,0,0,133,139,5,61,0,0,134,135,5,60,
        0,0,135,139,5,61,0,0,136,137,5,62,0,0,137,139,5,61,0,0,138,131,1,
        0,0,0,138,132,1,0,0,0,138,134,1,0,0,0,138,136,1,0,0,0,139,46,1,0,
        0,0,140,142,7,8,0,0,141,140,1,0,0,0,142,143,1,0,0,0,143,141,1,0,
        0,0,143,144,1,0,0,0,144,145,1,0,0,0,145,146,6,23,0,0,146,48,1,0,
        0,0,8,0,92,97,103,110,119,138,143,1,6,0,0
    ]

class jsbachLexer(Lexer):

    atn = ATNDeserializer().deserialize(serializedATN())

    decisionsToDFA = [ DFA(ds, i) for i, ds in enumerate(atn.decisionToState) ]

    T__0 = 1
    T__1 = 2
    T__2 = 3
    T__3 = 4
    T__4 = 5
    T__5 = 6
    T__6 = 7
    T__7 = 8
    T__8 = 9
    T__9 = 10
    T__10 = 11
    STR = 12
    LN = 13
    VAR = 14
    FNME = 15
    NOTE = 16
    NUM = 17
    ADD = 18
    MULT = 19
    DIV = 20
    SUBS = 21
    REM = 22
    COMP = 23
    WS = 24

    channelNames = [ u"DEFAULT_TOKEN_CHANNEL", u"HIDDEN" ]

    modeNames = [ "DEFAULT_MODE" ]

    literalNames = [ "<INVALID>",
            "'|:'", "':|'", "'<-'", "'<!>'", "'<?>'", "'<:>'", "'if'", "'else'", 
            "'while'", "'('", "')'", "'+'", "'*'", "'/'", "'-'", "'%'" ]

    symbolicNames = [ "<INVALID>",
            "STR", "LN", "VAR", "FNME", "NOTE", "NUM", "ADD", "MULT", "DIV", 
            "SUBS", "REM", "COMP", "WS" ]

    ruleNames = [ "T__0", "T__1", "T__2", "T__3", "T__4", "T__5", "T__6", 
                  "T__7", "T__8", "T__9", "T__10", "STR", "LN", "VAR", "FNME", 
                  "NOTE", "NUM", "ADD", "MULT", "DIV", "SUBS", "REM", "COMP", 
                  "WS" ]

    grammarFileName = "jsbach.g4"

    def __init__(self, input=None, output:TextIO = sys.stdout):
        super().__init__(input, output)
        self.checkVersion("4.10.1")
        self._interp = LexerATNSimulator(self, self.atn, self.decisionsToDFA, PredictionContextCache())
        self._actions = None
        self._predicates = None


